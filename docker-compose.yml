version: ${DOCKER_COMPOSE_VERSION}

services:

  frontend:
    container_name: frontend
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true 

    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        FRONTEND_PORT: ${FRONTEND_PORT}
        NODE_VERSION: ${NODE_VERSION}
    env_file:
      - .env
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - network
  
  api:
    container_name: api
    ports:
      - ${API_PORT}:${API_PORT}
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        API_PORT: ${API_PORT}
        NODE_VERSION: ${NODE_VERSION}
    env_file:
      - .env
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - mysql
    networks:
      - network
    

  mysql:
    container_name: mysqldb
    image: mysql
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8081:80
    networks:
      - network

volumes:
  db:
    driver: local
networks:
  network:
    driver: bridge